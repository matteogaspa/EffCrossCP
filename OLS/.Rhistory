cov_lasso[i,7] <- cov_int(matrix(c(splt2_lasso$lo[i], splt2_lasso$up[i]), ncol = 2), ytest[i])
cov_rf[i,7]    <- cov_int(matrix(c(splt2_rf$lo[i], splt2_rf$up[i]), ncol = 2), ytest[i])
len_lasso[i,7] <- len_int(matrix(c(splt2_lasso$lo[i], splt2_lasso$up[i]), ncol = 2))
len_rf[i,7]    <- len_int(matrix(c(splt2_rf$lo[i], splt2_rf$up[i]), ncol = 2))
}
cov_lasso_fn <- rbind(cov_lasso_fn, cov_lasso)
cov_rf_fn    <- rbind(cov_rf_fn, cov_rf)
len_lasso_fn <- rbind(len_lasso_fn, len_lasso)
len_rf_fn    <- rbind(len_rf_fn, len_rf)
res_cov_lasso[b,] <- colMeans(cov_lasso)
res_cov_rf[b,]    <- colMeans(cov_rf)
res_len_lasso[b,] <- colMeans(len_lasso)
res_len_rf[b,]    <- colMeans(len_rf)
cat(b,"\n")
}
setwd("~/Desktop/CODEcopia/Parkinson")
rm(list = ls())
library(conformalInference)
source("utils2.R")
load("parkinson.RData")
tab_lasso <- rbind(
apply(len_lasso_fn, 2, mean),
apply(len_lasso_fn, 2, sd),
apply(len_lasso_fn, 2, median),
apply(len_lasso_fn, 2, min),
apply(len_lasso_fn, 2, max),
apply(cov_lasso_fn, 2, mean)
)
tab_rf <- rbind(
apply(len_rf_fn, 2, mean),
apply(len_rf_fn, 2, sd),
apply(len_rf_fn, 2, median),
apply(len_rf_fn, 2, min),
apply(len_rf_fn, 2, max),
apply(cov_rf_fn, 2, mean)
)
rownames(tab_lasso) <- rownames(tab_rf) <- c("Mean", "Sd", "Median", "Min", "Max", "Coverage")
xtable::xtable(tab_lasso, digits = 3)
xtable::xtable(tab_rf, digits = 3)
setwd("~/Desktop/CODEcopia/News")
library(conformalInference)
library(tidyr)
library(ggplot2)
library(patchwork)
library(showtext)
library(gridExtra)
load("news.RData")
colnames(cov_res_lm) <- colnames(cov_res_lasso) <- colnames(cov_res_rf) <- colnames(len_res_lm) <- colnames(len_res_lasso) <- colnames(len_res_rf) <- c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "split(2α)")
cov_res_lm    <- as.data.frame(cov_res_lm)
cov_res_lasso <- as.data.frame(cov_res_lasso)
cov_res_rf    <- as.data.frame(cov_res_rf)
len_res_lm    <- as.data.frame(len_res_lm)
len_res_lasso <- as.data.frame(len_res_lasso)
len_res_rf    <- as.data.frame(len_res_rf)
len_res_lm_long        <- pivot_longer(len_res_lm, cols = everything(), names_to = "Col", values_to = "Val")
len_res_lm_long$Col    <- factor(len_res_lm_long$Col, levels = colnames(len_res_lm[,]))
len_res_lasso_long     <- pivot_longer(len_res_lasso, cols = everything(), names_to = "Col", values_to = "Val")
len_res_lasso_long$Col <- factor(len_res_lasso_long$Col, levels = colnames(len_res_lasso[,]))
len_res_rf_long        <- pivot_longer(len_res_rf, cols = everything(), names_to = "Col", values_to = "Val")
len_res_rf_long$Col    <- factor(len_res_rf_long$Col, levels = colnames(len_res_rf[,]))
p0 <- ggplot(len_res_lm_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "LM", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") + ylim(1.8, 3)
p1 <- ggplot(len_res_lasso_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Lasso", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") + ylim(1.8, 3)
p2 <- ggplot(len_res_rf_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Random Forest", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") + ylim(1.8, 3)
df_cov <- data.frame(
method = c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "split(2α)"),
LM     = colMeans(cov_res_lm),
Lasso  = colMeans(cov_res_lasso),
RF     = colMeans(cov_res_rf)
)
df_long <- pivot_longer(df_cov, cols = c(LM, Lasso, RF), names_to = "Model", values_to = "Value")
df_long$method <- factor(df_long$method, levels = df_cov$method)
p3 <- ggplot(df_long, aes(x = method, y = Value, color = Model, shape = Model)) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "Empirical Coverage", x = "", y = "Coverage", color = NULL, shape = NULL) +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(0.5, 0.1),  legend.justification = "center", legend.background = element_rect(fill = "white")) +
scale_color_manual(values = c("LM" = "seagreen3", "Lasso" = "darkblue", "RF" = "orange2" )) +
scale_shape_manual(values = c("Lasso" = 15, "RF" = 18, "LM" = 19)) +
ylim(0.7,1)
showtext_auto()
plot_news <-(p0 + p1 + p2)
plot_news
xtable::xtable(t(df_cov), digits = 3)
setwd("~/Desktop/CODEcopia/Crime")
rm(list = ls())
library(conformalInference)
library(tidyr)
library(ggplot2)
load("crime.RData")
colnames(cov_res_lasso) <- colnames(cov_res_rf) <- colnames(len_res_lasso) <- colnames(len_res_rf) <- c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "split2")
cov_res_lasso <- as.data.frame(cov_res_lasso)
cov_res_rf <- as.data.frame(cov_res_rf)
len_res_lasso <- as.data.frame(len_res_lasso[,1:6])
len_res_rf <- as.data.frame(len_res_rf[,1:6])
len_res_lasso_long <- pivot_longer(len_res_lasso, cols = everything(),
names_to = "Col", values_to = "Val")
len_res_lasso_long$Col <- factor(len_res_lasso_long$Col, levels = colnames(len_res_lasso[,]))
len_res_rf_long <- pivot_longer(len_res_rf, cols = everything(),
names_to = "Col", values_to = "Val")
len_res_rf_long$Col <- factor(len_res_rf_long$Col, levels = colnames(len_res_rf[,]))
p1 <- ggplot(len_res_lasso_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Lasso", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") +
ylim(0.25, 0.7)
p2 <- ggplot(len_res_rf_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Random Forest", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") +
ylim(0.25,0.7)
df_cov <- data.frame(
method = c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split"),
Lasso  = colMeans(cov_res_lasso[,1:6]),
RF     = colMeans(cov_res_rf[,1:6])
)
df_long <- pivot_longer(df_cov, cols = c(Lasso, RF),
names_to = "Model", values_to = "Value")
df_long$method <- factor(df_long$method, levels = df_cov$method)
# Crea il grafico con punti per lasso e rf con forme e colori diversi
p3 <- ggplot(df_long, aes(x = method, y = Value, color = Model, shape = Model)) +
geom_point(size = 3) +  # Aggiunge i punti con dimensione personalizzata
theme_minimal() +
labs(title = "Empirical Coverage", x = "", y = "Coverage", color = NULL, shape = NULL) +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(0.5, 0.1),  legend.justification = "center", legend.background = element_rect(fill = "white")) +
scale_color_manual(values = c("Lasso" = "darkblue", "RF" = "orange2" )) +
scale_shape_manual(values = c("Lasso" = 15, "RF" = 18)) +
ylim(0.7,1)
gridExtra::grid.arrange(p1,p2,p3,ncol=3)
p1 <- ggplot(len_res_lasso_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Lasso", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") +
ylim(0.25, 0.6)
p2 <- ggplot(len_res_rf_long, aes(x = Col, y = Val, fill = Col)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Random Forest", x = "", y = "Width") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") +
ylim(0.25,0.6)
df_cov <- data.frame(
method = c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split"),
Lasso  = colMeans(cov_res_lasso[,1:6]),
RF     = colMeans(cov_res_rf[,1:6])
)
df_long <- pivot_longer(df_cov, cols = c(Lasso, RF),
names_to = "Model", values_to = "Value")
df_long$method <- factor(df_long$method, levels = df_cov$method)
# Crea il grafico con punti per lasso e rf con forme e colori diversi
p3 <- ggplot(df_long, aes(x = method, y = Value, color = Model, shape = Model)) +
geom_point(size = 3) +  # Aggiunge i punti con dimensione personalizzata
theme_minimal() +
labs(title = "Empirical Coverage", x = "", y = "Coverage", color = NULL, shape = NULL) +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1), legend.position = c(0.5, 0.1),  legend.justification = "center", legend.background = element_rect(fill = "white")) +
scale_color_manual(values = c("Lasso" = "darkblue", "RF" = "orange2" )) +
scale_shape_manual(values = c("Lasso" = 15, "RF" = 18)) +
ylim(0.7,1)
gridExtra::grid.arrange(p1,p2,p3,ncol=3)
setwd("~/Desktop/CODEcopia/BostonHousing")
load("boston.RData")
tab <- rbind(
#c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "full"),
apply(len_res_ols, 2, mean),
apply(len_res_ols, 2, sd),
apply(len_res_ols, 2, median),
apply(len_res_ols, 2, min),
apply(len_res_ols, 2, max),
apply(cov_res_ols, 2, mean)
)
rownames(tab) <- c("Mean", "Sd", "Median", "Min", "Max", "Coverage")
xtable::xtable(tab, digits = 3)
rm(list = ls())
library(conformalInference)
library(tidyr)
library(ggplot2)
library(MASS)
source("utils2.R")
# Load dataset
data("Boston")
df <- Boston
y <- df$medv
X <- df[,1:13]
# set hyper parameters -----
n_train <- 200
n       <- NROW(y)
n_test  <- n-n_train
K       <- 5
alpha   <- 0.1
lambda  <- 0.01
ntree   <- 20
funs1   <- lm.funs()
# Simulation study
B <- 20
cov_ols_fn <- len_ols_fn <- NULL
cov_res_ols <- len_res_ols <- matrix(NA, ncol = 7, nrow = B)
for(b in 1:B){
set.seed(b+45)
train <- sample(1:NROW(y), n_train, replace = F)
test  <- setdiff(1:NROW(y), train)
ytrain <- y[train]
Xtrain <- X[train,]
ytest <- y[test]
Xtest <- X[test,]
# Cross-conf
cr_ols <- cc_ols(y = ytrain, X = as.matrix(Xtrain), x_test = as.matrix(Xtest), K = K, alpha = alpha)
# split
splt_ols <- conformal.pred.split(x = Xtrain, y = ytrain, x0 = as.matrix(Xtest), train.fun = funs1$train.fun, predict.fun = funs1$predict.fun, alpha = alpha)
# full
full_ols <- conformal.pred(x = Xtrain, y = ytrain, x0 = as.matrix(Xtest), train.fun = funs1$train.fun, predict.fun = funs1$predict.fun, alpha = alpha, num.grid.pts = 200)
cov_ols <- len_ols <- matrix(NA, nrow = n_test, ncol = 7)
for(i in 1:n_test){
# mod-cc
cov_ols[i,1] <- cov_int(cr_ols$int_cc[[i]]$set, ytest[i])
len_ols[i,1] <- len_int(cr_ols$int_cc[[i]]$set)
# e-cc
cov_ols[i,2] <- cov_int(cr_ols$int_cce[[i]]$set, ytest[i])
len_ols[i,2] <- len_int(cr_ols$int_cce[[i]]$set)
# u-cc
cov_ols[i,3] <- cov_int(cr_ols$int_ccu[[i]]$set, ytest[i])
len_ols[i,3] <- len_int(cr_ols$int_ccu[[i]]$set)
# eu-cc
cov_ols[i,4] <- cov_int(cr_ols$int_cceu[[i]]$set, ytest[i])
len_ols[i,4] <- len_int(cr_ols$int_cceu[[i]]$set)
# cc
cov_ols[i,5] <- cov_int(cr_ols$int_ccs[[i]]$set, ytest[i])
len_ols[i,5] <- len_int(cr_ols$int_ccs[[i]]$set)
# splt
cov_ols[i,6] <- cov_int(matrix(c(splt_ols$lo[i], splt_ols$up[i]), ncol = 2), ytest[i])
len_ols[i,6] <- len_int(matrix(c(splt_ols$lo[i], splt_ols$up[i]), ncol = 2))
# full
cov_ols[i,7] <- cov_int(matrix(c(full_ols$lo[i], full_ols$up[i]), ncol = 2), ytest[i])
len_ols[i,7] <- len_int(matrix(c(full_ols$lo[i], full_ols$up[i]), ncol = 2))
}
cov_ols_fn <- rbind(cov_ols_fn, cov_ols)
len_ols_fn <- rbind(len_ols_fn, len_ols)
cov_res_ols[b,] <- colMeans(cov_ols)
len_res_ols[b,] <- colMeans(len_ols)
cat(b,"\n")
}
save(cov_res_ols, len_res_ols, cov_ols_fn, len_ols_fn, file = "boston.RData")
load("boston.RData")
tab <- rbind(
#c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "full"),
apply(len_res_ols, 2, mean),
apply(len_res_ols, 2, sd),
apply(len_res_ols, 2, median),
apply(len_res_ols, 2, min),
apply(len_res_ols, 2, max),
apply(cov_res_ols, 2, mean)
)
rownames(tab) <- c("Mean", "Sd", "Median", "Min", "Max", "Coverage")
xtable::xtable(tab, digits = 3)
load("boston.RData")
rm(list = ls())
load("boston.RData")
tab <- rbind(
#c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "full"),
apply(len_res_ols, 2, mean),
apply(len_res_ols, 2, sd),
apply(len_res_ols, 2, median),
apply(len_res_ols, 2, min),
apply(len_res_ols, 2, max),
apply(cov_res_ols, 2, mean)
)
rownames(tab) <- c("Mean", "Sd", "Median", "Min", "Max", "Coverage")
xtable::xtable(tab, digits = 3)
rm(list = ls())
setwd("~/Desktop/CODEcopia/Abalone")
load("abalone.RData")
tab <- rbind(
#c("mod-cross", "e-mod-cross", "u-mod-cross", "eu-mod-cross", "cross", "split", "split(2alpha)"),
apply(len_res_rf, 2, mean),
apply(len_res_rf, 2, sd),
apply(len_res_rf, 2, median),
apply(len_res_rf, 2, min),
apply(len_res_rf, 2, max),
apply(cov_res_rf, 2, mean)
)
rownames(tab) <- c("Mean", "Sd", "Median", "Min", "Max", "Coverage")
xtable::xtable(tab, digits = 3)
setwd("~/Desktop/CODEcopia/OLS")
result_ols_fnl.RData
result_ols_fnl.RData
load("result_ols_fnl.RData")
library(ggplot2)
library(patchwork)
library(showtext)
showtext_auto()
ps    <- seq(5, 200, by = 5)
dim(res_cov); dim(res_len)
cov_p <- apply(res_cov, c(1,3), mean)
len_p <- apply(res_len, c(1,3), mean)
dim(cov_p); dim(len_p)
len_plot <- data.frame(
p = ps,
mod_cc = len_p[,1],
e_mod_cc = len_p[,2],
u_mod_cc = len_p[,3],
eu_mod_cc = len_p[,4],
cross = len_p[,5],
split = len_p[,6],
full = len_p[,7],
jack = len_p[,8],
splt2 = len_p[,9]
)
# plot 1 - set width + cov
p1 <- ggplot(len_plot, aes(x = p)) +
geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = split, color = "split"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "gold2"),
name = "") +
labs(title = "Averaged prediction set width", x = "p", y = "Width") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(len_plot, aes(x = p)) +
geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = split, color = "split"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "gold2"),
name = "") +
labs(title = "(zoomed in)", x = "p", y = "Width") +
coord_cartesian(ylim = c(0, 20)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
cov_plot <- data.frame(
p = ps,
mod_cc = cov_p[,1],
e_mod_cc = cov_p[,2],
u_mod_cc = cov_p[,3],
eu_mod_cc = cov_p[,4],
cross = cov_p[,5],
split = cov_p[,6],
full = cov_p[,7],
jack = cov_p[,8],
splt2 = cov_p[,9]
)
p3 <- ggplot(cov_plot, aes(x = p)) +
geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = split, color = "split"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
geom_hline(yintercept = 0.8, linetype = "dashed", col = "gray") +
geom_hline(yintercept = 0.9, linetype = "dashed", col = "gray") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "gold2"),
name = "") +
labs(title = "Empirical coverage", x = "p", y = "Coverage") +
coord_cartesian(ylim = c(0.70, 1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
combined_plot <- (p1 + p2 + p3) + plot_layout(guides = "collect") & theme(legend.position = "bottom", legend.text = element_text(size = 12))
combined_plot
# plot 2
p1n <- ggplot(len_plot, aes(x = p)) +
geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = split, color = "split"), linewidth = 1.3, linetype = "solid") +
#geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = splt2, color = "split (2α)"), linewidth = 1, linetype = "solid") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "gold2", "split (2α)" = "dodgerblue2"),
name = "") +
labs(title = "Averaged prediction set width", x = "p", y = "Width") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
p2n <- ggplot(len_plot, aes(x = p)) +
geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = split, color = "split"), linewidth = 1.3, linetype = "solid") +
#geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = splt2, color = "split (2α)"), linewidth = 1, linetype = "solid") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "gold2", "split (2\u03B1)" = "dodgerblue2"),
name = "") +
labs(title = "(zoomed in)", x = "p", y = "Width") +
coord_cartesian(ylim = c(0, 20)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
p3n <- ggplot(cov_plot, aes(x = p)) +
geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = split, color = "split"), linewidth = 1.3, linetype = "solid") +
#geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = splt2, color = "split (2α)"), linewidth = 1, linetype = "solid") +
geom_hline(yintercept = 0.8, linetype = "dashed", col = "gray") +
geom_hline(yintercept = 0.9, linetype = "dashed", col = "gray") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "gold2", "split (2α)" = "dodgerblue2"),
name = "") +
labs(title = "Empirical coverage", x = "p", y = "Coverage") +
coord_cartesian(ylim = c(0.70, 1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
combined_plot2 <- (p1n + p2n + p3n) + plot_layout(guides = "collect") & theme(legend.position = "bottom", legend.text = element_text(size = 12))
combined_plot2
ggsave("ols_plot2.pdf", combined_plot2, width = 8, height = 5)
# plot 3
p1b <- ggplot(len_plot, aes(x = p)) +
#geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = split, color = "split"), linewidth = 1.3, linetype = "solid") +
geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = splt2, color = "split (2α)"), linewidth = 1, linetype = "solid") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "forestgreen", "split (2α)" = "dodgerblue2"),
name = "") +
labs(title = "Averaged prediction set width", x = "p", y = "Width") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
p2b <- ggplot(len_plot, aes(x = p)) +
#geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = split, color = "split"), linewidth = 1.3, linetype = "solid") +
geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = splt2, color = "split (2α)"), linewidth = 1, linetype = "solid") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "forestgreen", "split (2\u03B1)" = "dodgerblue2"),
name = "") +
labs(title = "(zoomed in)", x = "p", y = "Width") +
coord_cartesian(ylim = c(0, 20)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
p3b <- ggplot(cov_plot, aes(x = p)) +
#geom_line(aes(y = mod_cc, color = "mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = e_mod_cc, color = "e-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = u_mod_cc, color = "u-mod-cross"), linewidth = 1.25, linetype = "solid") +
geom_line(aes(y = eu_mod_cc, color = "eu-mod-cross"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = cross, color = "cross"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = split, color = "split"), linewidth = 1.3, linetype = "solid") +
geom_line(aes(y = full, color = "full"), linewidth = 1, linetype = "solid") +
geom_line(aes(y = jack, color = "jackknife+"), linewidth = 1, linetype = "solid") +
#geom_line(aes(y = splt2, color = "split (2α)"), linewidth = 1, linetype = "solid") +
geom_hline(yintercept = 0.8, linetype = "dashed", col = "gray") +
geom_hline(yintercept = 0.9, linetype = "dashed", col = "gray") +
scale_color_manual(
values = c("mod-cross" = "black", "e-mod-cross" = "blue", "u-mod-cross" = "green3", "eu-mod-cross" = "red",
"cross" = "orange", "split" = "pink2", "full" = "purple", "jackknife+" = "forestgreen", "split (2α)" = "dodgerblue2"),
name = "") +
labs(title = "Empirical coverage", x = "p", y = "Coverage") +
coord_cartesian(ylim = c(0.70, 1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
combined_plot3 <- (p1b + p2b + p3b) + plot_layout(guides = "collect")
combined_plot3
ggsave("ols_plot3.pdf", combined_plot3, width = 12, height = 4)
ggsave("ols_plot3.pdf", combined_plot3, width = 12, height = 5)
